name: Assign Reviewer
on:
  pull_request:
    types: [opened, reopened, ready_for_review]

permissions:
  pull-requests: write

jobs:
  assign-reviewer:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft != true }}
    steps:
      - name: Assign Reviewer
        uses: actions/github-script@v7
        with:
          script: |
            if (context.payload.pull_request.assignees.length === 0) {
              // Find suitable reviewers
              /* const { data: members } = await github.rest.teams.listMembersInOrg({ // TODO: ensure that access token as adequate perms for this
                org: "JuliaLang",
                team_slug: "committers",
                per_page: 100,
              });
              member_logins = members.map(member => member.login); */
              member_logins = ["LilithHafner", "LilithHafnerBot"]; // TODO use committers in production

              // Filter out the PR author
              const prAuthor = context.payload.pull_request.user.login;
              member_logins = member_logins.filter(login => login !== prAuthor);

              // Assign random reviewer
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                assignees: member_logins[Math.floor(Math.random()*member_logins.length)],
              });

              // Add the "pr review" label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['pr review'],
              });
            }
