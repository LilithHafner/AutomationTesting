name: Reminders
on:
  schedule:
    - cron: '*/5 * * * *' # Reminder every 10 minutes TODO: scale back for production.
  workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  remind-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Process Each PR
        id: fetch-prs
        uses: actions/github-script@v7
        with:
          script: |
            // Fetch PRs
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
            });

            // Process each PR
            for (const pr of prs) {
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
              });

              // Check if PR is in "pr review" or "ci review" state
              const isPrReview = labels.some(label => label.name === 'pr review');
              const isCiReview = labels.some(label => label.name === 'ci review');
              const isChangesNeeded = labels.some(label => label.name === 'changes needed');

              if (isPrReview || isCiReview) {
                // Fetch assignees and append requested reviewers if we're waiting for a review
                var assignees = isPrReview ? pr.assignees.concat(pr.requested_reviewers) : pr.assignees

                if (assignees.length > 0) {
                  // Ping the assignees
                  const assigneeMentions = assignees.map(a => `@${a.login}`).join(' ')
                  const body = isPrReview ? `${assigneeMentions}, please review this PR <3` : `${assigneeMentions}, please review the CI failure <3`;
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    body
                  });
                } else {
                  console.log(`No requested reviewers found for PR #${pr.number}.`);
                  // TODO: assign a new reviewer who has not already removed their assignment, 
                  // first from suggested reviewers, then at random from committers.
                };
              } else if (isChangesNeeded) {
                const body = `@${pr.user.login}, please make the requested changes to this PR <3`;
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body
                });
              }
            }
